var searchIndex = JSON.parse('{\
"ldap_authd":{"doc":"","t":"DDHRGMFFLLMLLLLLLLLLLLLFFLMLLMFLLLLLLFLLFLL","n":["BASIC_HTTP_RE","Cli","LAZY","LDAP_HEADERS","UserInfo","__private_field","__stability","__static_ref_initialize","augment_args","augment_args_for_update","auth_endpoint","borrow","borrow","borrow_mut","borrow_mut","command","command_for_update","deref","fmt","from","from","from_arg_matches","from_arg_matches_mut","get_ldap_options_from_headers","get_userdata_from_authorization","group_id","hostname","into","into","port","query_ldap","try_from","try_from","try_into","try_into","type_id","type_id","unauthorized_response","update_from_arg_matches","update_from_arg_matches_mut","validate_auth_header","vzip","vzip"],"q":[[0,"ldap_authd"]],"d":["","","","","(username, password)","","","","","","The endpoint the authentication service should respond on","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the necessary options for querying the LDAP server …","Tries extracting the username from the given <code>Authorization</code> …","","Host to bind","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Port to bind","Queries the LDAP server for the given username and checks …","","","","","","","Returns a unauthorized Response","","","Validates if the given <code>Authorization</code> header has the …","",""],"i":[0,0,0,0,0,3,0,0,4,4,4,3,4,3,4,4,4,3,4,3,4,4,4,0,0,4,4,3,4,4,0,3,4,3,4,3,4,0,4,4,0,3,4],"f":[0,0,0,0,0,0,[[],1],[[],1],[2,2],[2,2],0,[[]],[[]],[[]],[[]],[[],2],[[],2],[3,1],[[4,5],6],[[]],[[]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[10,[[14,[[13,[11,12]]]]]],[12,14],[[],[[16,[15]]]],0,[[]],[[]],0,[[[13,[11,12]]],14],[[],9],[[],9],[[],9],[[],9],[[],17],[[],17],[[],18],[[4,7],[[9,[8]]]],[[4,7],[[9,[8]]]],[[[16,[12]]],14],[[]],[[]]],"c":[],"p":[[3,"Regex"],[3,"Command"],[3,"BASIC_HTTP_RE"],[3,"Cli"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"Request"],[3,"String"],[15,"str"],[3,"HashMap"],[6,"Result"],[3,"Id"],[4,"Option"],[3,"TypeId"],[3,"Response"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
